:root {
  /* counter-reset: sections; */
  /* Base colors */
  --color-bg: #2d2d2d;
  --color-bg2: #3b3b3b;
  --color-surface: #3b3b3b;
  --color-primary: #8abf7b;
  --color-secondary: #f5a623;
  --color-text: #f0f0f0; /* Slightly brighter for contrast on dark */
  --color-text-on-secondary: #1a1a1a; /* Dark text for use over secondary */
  --color-text-muted: #a1a1a1;
  --color-border: #444444;
  --color-danger: #ff6f61;

  --color-hover: #4d4d4d;
  --color-active: #4c4c4c;

  font-family: "Segoe UI";
}

/* ===== Full-Page Layout ===== */
html,
body {
  height: 100vh; /* Ensure viewport covers full browser height */
  overflow: hidden; /* Disable scrolling to keep layout fixed */
}

/* ===== Global Reset & Base Styles ===== */
* {
  /* Apply default text color from theme */
  color: var(--color-text);
  /* Apply default background color from theme */
  background-color: var(--color-bg2);

  /* Slightly round all elements for consistency */
  border-radius: 2.5px;
  /* Remove default browser margins */
  margin: 0;
}

/* ===== Main Layout Grid ===== */
main {
  display: grid; /* Use CSS Grid for layout */
  height: 100%; /* Fill available vertical space */

  /* Define named grid areas for page structure */
  grid-template-areas:
    "top top top top"
    "nav canvas canvas settings"
    "nav control control settings"
    "nav sections comments settings"
    "footer footer footer footer";

  /* Column widths: hidden nav, two equal main areas, settings sidebar */
  grid-template-columns: 0fr 2fr 2fr 1fr;
  /* Row heights: hidden header, auto rows, flexible middle, fixed footer */
  grid-template-rows: 0px auto auto 1fr 30px;
  gap: 5px 5px; /* Space between grid items */

  background-color: var(--color-bg); /* Background for main container */
  /* background-color: red; */ /* Debugging: visualize grid */
}

/* Center content and add spacing for all direct children of main */
main > * {
  justify-items: center; /* Center items within each grid cell */
  padding: 5px; /* Inner spacing around elements */
}

/* ===== Grid Items & Layout Areas ===== */
headerSection {
  grid-area: top; /* Assign headerSection to the “top” area spanning all columns */
}
navSection {
  grid-area: nav; /* Assign navSection to the “nav” sidebar area */
}

/* Hide header and nav placeholders (collapsed) */
headerSection,
navSection {
  visibility: hidden; /* Keep elements in DOM but invisible */
  min-width: 0; /* Prevent occupying horizontal space */
  width: 0; /* Collapse width completely */
  max-width: 0; /* Ensure no expansion beyond zero */
  padding: 0; /* Remove any internal spacing */
}

settingsArea {
  grid-area: settings; /* Place settingsArea in the settings sidebar */
  min-width: 100px; /* Ensure settings area stays at least this wide */
}

settingsDiv {
  display: grid;
  gap: 20px; /* Space between individual setting controls */
}

settingsDiv > button {
  width: 100px; /* Set the width of the buttons to 100px */
  justify-self: center; /* Center the button horizontally */
}

canvasSection {
  grid-area: canvas; /* Place canvasSection in the main canvas area */
  height: auto; /* Allow height to adjust to content or canvas size */
}

controlSection {
  grid-area: control; /* Place controlSection in the control row */
  justify-content: center; /* Center controls horizontally */
  display: grid; /* Use grid for arranging control buttons */
}

sectionSection {
  grid-area: sections; /* Place sectionSection in the sections column */
}
commentSection {
  grid-area: comments; /* Place commentSection in the comments column */
}

/* Shared styling for sections and comments panels */
sectionSection,
commentSection {
  display: flex; /* Flex layout for vertical stacking */
  flex-direction: column; /* Stack children top-to-bottom */
  justify-content: center; /* Center content vertically when possible */
  max-height: 90vh; /* Limit height to 90% of viewport */
  width: 100%; /* Full width of grid cell */
  gap: 8px; /* Space between items */
  padding: 1rem; /* Internal padding */
  box-sizing: border-box; /* Include padding in width/height */
  overflow: hidden; /* Hide overflow; scroll only within panels */
}

/* Centering content inside individual items */
sectionSection > *,
commentSection > * {
  justify-items: center; /* Center grid items if any nested grids exist */
  justify-content: center; /* Center flex items horizontally */
}

footer {
  grid-area: footer;
  background-color: var(--color-bg2);
}

/* CANVAS */

.canvas {
  /* margin: 20px; */
  display: block;
  align-items: center;
  margin-left: auto;
  margin-right: auto;
}

.canvas-parent {
  /* margin: 5px; */
  display: block;
  align-items: center;
  margin-left: auto;
  margin-right: auto;
}

.grid-container {
  margin-left: auto;
  margin-right: auto;
  justify-content: center;
  display: flex;
}

input[type="range"] {
  width: 100%; /* or any other unit like %, vw, etc. */
  accent-color: var(--color-primary);
}

input[type="checkbox"] {
  accent-color: var(--color-primary);
}

.control {
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: 1fr;
  justify-content: center;
  gap: 8px;
}

.warning {
  color: var(--color-secondary);
  border: solid;
}

.centered {
  text-align: center;
}

/* 
  This rule targets elements with the class "no-background"
  and all of their direct children.
  It ensures that no background color is applied.
*/
.no-background,
.no-background > * {
  background-color: transparent; /* Removes any background color */
}

.sections,
.comments {
  justify-self: left;
  width: auto;
  white-space: nowrap;
  flex: 1;
  overflow-y: auto;
  border: 2px solid;
  border-color: var(--color-primary);
  padding: 8px;
  gap: 8px;
}

.comments > div,
.sections > div {
  margin-bottom: 8px; /* or whatever spacing you want */
  background-color: var(--color-active);
}

.comments > div:last-child,
.sections > div:last-child {
  margin-bottom: 0; /* optional: avoid extra space at the bottom */
}

.remove-button {
  margin-left: auto;
}

.row {
  display: flex;
  align-items: center;
  gap: 8px;
}

button {
  background-color: var(--color-bg);
  border: solid;
  border-width: 2px;
  border-color: var(--color-primary);
  color: var(--color-text);
  padding: 2px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  /* margin: 4px; */
  min-width: 50px;
}

button:hover {
  background-color: var(--color-active);
}

button:active {
  background-color: var(--color-surface);
}

button:disabled {
  /* background-color: var(--color-surface); */
  border-color: var(--color-border);
  color: var(--color-text-muted);
}

button img {
  filter: invert(100%) sepia(0%) saturate(100%) hue-rotate(0deg)
    brightness(100%) contrast(100%);
}

a:link {
  color: var(--color-text);
  background-color: transparent;
  text-decoration: none;
}

a:visited {
  color: var(--color-text-muted);
}

progress {
  width: 100%;
}

progress::-webkit-progress-value {
  background-color: var(--color-primary);
}

progress::-moz-progress-bar {
  background-color: var(--color-primary);
}

h3,
h4 {
  text-align: center;
  color: var(--color-primary);
  margin: 5px;
}

p {
  font-size: x-small;
  text-align: center;
}

hr {
  color: var(--color-border);
}



.lottie-icon {
  box-sizing: border-box; /*ensure width/height include borders if you add them */
  height: 30px;
  padding: 5px;
  display: flex;
  align-items: center;
}
.lottie-icon svg {
  padding: 10px;
  height: 30px;
  width: auto; /*fill the full width of the now-unpadded parent */
  display: block; /*remove inline whitespace */
}


 /* The switch - the box around the slider */
.switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 24px;
}

/* Hide default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--color-text-muted);
  -webkit-transition: .1s;
  transition: .1s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 16px;
  width: 16px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .1s;
  transition: .1s;
}

input:checked + .slider {
  background-color: var(--color-primary);
}

input:focus + .slider {
  box-shadow: 1 0 5px red;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
} 
